{
 Opa Diogo, Vou te dar um caminho a seguir (Minha visão e auxilio),
 mas fique a vontade para fazer oque achar melhor!

 Você vai manipular 4 model principais: RegistroExercicioModel, TreinoExercicioModel,
                                        ExercicioModel e TreinoModel.

 TreinoExercicioModel:
  É ela que vai alimentar sua tela, ela é a junção do ExercicioModel e do TreinoModel.

  IdTreino => Vai criar o 'quadro principal' onde vai ficar ter Nome do treino e a data.
              Quando o exercicio for finalizado você atualiza a data do na tabela treino para
              Hoje + uma semana. (Por enquanto vamo fazer algo mais prático, do que dinâmico).

  IdExercicio => podem ser vários, ou seja, você vai criar um campo dentro do 'quadro principal'
                  para cada exercício. Do banco vem só o nome dele ( E a região, mas só adiciona isso
                  no final do projeto). Para cada exercício você coloca 'Serie' e 'repetição',
                  acredito que o mais fácil a se fazer aqui é: Ao invês de adicionar um elemento visual
                  você faz o seguinte, adicionou os dados da série e clicou no botão (+), você adiciona
                  os dados em uma lista de series (Cria uma classe qualquer coisa), e limpa os elementos
                  que pegam esses dados, acho melhor do que criar elementos novos.


 RegistroExercicioModel:
  É ela que você vai fazer insert no banco, baseado nos dados recolhidos do 'quadro principal', que ficam
  armazenados na lista que te falei.
  Basicamente para cada Serie que for feito é um insert. Tem um campo que o nome é 'Hora', mas só
  adiciona a Data para ficar mais fácil de manipular depois.

 Em resumo:

 ______________________________
 | Nome do Treino             |
 |                            |
 |  Exercicio 1:              |
 |  |reps| |peso| (+)         |
 |                            |
 |  (Finalizar)               |
 |                            |
 |  Exercicio 2:              |
 |  |reps| |peso| (+)         |
 ______________________________

 Repetir algo mais ou menos com esse Design. Para ficar mais fácil, adiciona um exercício, e após o
 botão finalizar ser clicado você limpa o campo exercício e atribui ao segundo.

  Estrutura para facilitar, e deixar o código mais bonito:
  Instâncie um objeto global que é o MontarTreinoController.
  MontarTreinoController => Nele você coloca todas as lógicas de tratamento de
                  dados, e que vá manipular os dados.

  Aqui na view você pode (Por exemplo) instânciar uma list de dados, e tals,
  quando terminar e criar um procedure (Método sem retorno) que recebe uma
  lista, e lá tu faz o tratamento de dados.

}

unit AcompanharView;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, 
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  Main;

type
  TForm2 = class(TForm1)
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.fmx}

end.
